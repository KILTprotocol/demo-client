on:
  release:
    types: [created]

name: Release

jobs:
  deploy:
    name: Build image and push to Amazon ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build image
      run: |
        docker build -t kilt/demo-client .
    
    - name: Tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: kilt/demo-client
      run: |
        IMAGE_TAG=${GITHUB_REF#refs/tags/}
        docker tag kilt/demo-client $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker tag kilt/demo-client $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Configure Kubernetes
      env:
        KUBECONFIG: '${{ github.workspace }}/.kube/kubeconfig'
      run: |
        mkdir -p '${{ github.workspace }}/.kube' \
          && echo '${{ secrets.KUBE_CONFIG}}' | base64 -d > $KUBECONFIG

    - name: Set new image
      env:
        IMAGE: ${{ steps.build-image.outputs.image }}
        KUBECONFIG: '${{ github.workspace }}/.kube/kubeconfig'
      run: |
        kubectl -n testnet set image deployment/client-deployment client-container=$IMAGE

  buildDocker:
    name: Build image and push to Docker Hub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build image
      run: |
        docker build -t kilt/demo-client .

    - name: Login to Docker Hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        echo $DOCKER_PASS | docker login --username=$DOCKER_USER --password-stdin

    - name: Tag, and push image to Docker Hub
      env:
        DOCKER_REPOSITORY: kiltprotocol/demo-client
      run: |
        IMAGE_TAG=${GITHUB_REF#refs/tags/}
        docker tag kilt/demo-client $DOCKER_REPOSITORY:latest
        docker tag kilt/demo-client $DOCKER_REPOSITORY:$IMAGE_TAG
        docker push $DOCKER_REPOSITORY:$IMAGE_TAG
        docker push $DOCKER_REPOSITORY:latest
