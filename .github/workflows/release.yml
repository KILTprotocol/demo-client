on:
  release:
    types: [created]

name: Release

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js v10
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - name: yarn install, lint and test
        run: |
          yarn install --frozen-lockfile
          yarn lint
  build:
    needs: test
    
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build image
      id: build-image
      run: |
        docker build -t kilt/demo-client .
        mkdir -p /tmp/cache
        docker save -o /tmp/cache/demo-client.tar kilt/demo-client

    - name: Cache image
      uses: actions/cache@v1
      with:
        path: /tmp/cache
        key: ${{ runner.os }}-demo-client-${{ github.sha }}
  push:
    needs: build

    name: Push to Amazon ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Get cached image
      uses: actions/cache@v1
      with:
        path: /tmp/cache
        key: ${{ runner.os }}-demo-client-${{ github.sha }}

    - name: Load image
      run: |
        docker load -i /tmp/cache/demo-client.tar

    - name: Tag, and push image to Amazon ECR
      id: build-image
      env:
        IMAGE_TAG: ${{ github.ref }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: kilt/demo-client
      run: |
        docker tag kilt/demo-client $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker tag kilt/demo-client $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  pushDocker:
    needs: build

    name: Push to Docker Hub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        echo $DOCKER_PASS | docker login --username=$DOCKER_USER --password-stdin

    - name: Get cached image
      uses: actions/cache@v1
      with:
        path: /tmp/cache
        key: ${{ runner.os }}-demo-services-${{ github.sha }}

    - name: Load image
      run: |
        docker load -i /tmp/cache/demo-services.tar

    - name: Tag, and push image to Docker Hub
      id: build-image
      env:
        IMAGE_TAG: ${{ github.ref }}
        DOCKER_REPOSITORY: kiltprotocol/demo-client
      run: |
        docker tag kilt/demo-client $DOCKER_REPOSITORY:latest
        docker tag kilt/demo-client $DOCKER_REPOSITORY:$IMAGE_TAG
        docker push $DOCKER_REPOSITORY:$IMAGE_TAG
        docker push $DOCKER_REPOSITORY:latest
